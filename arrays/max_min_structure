package solution;

import java.util.Arrays;
import java.io.*;
import java.util.*;

/**
 * @author Shreesha
 */

/*QUESTION
Rearrange elements in a sorted array to a max, min fashion using constant space
Example: {1,2,3,4,5} -> {5,1,4,2,3}

link: http://www.geeksforgeeks.org/rearrange-array-maximum-minimum-form-set-2-o1-extra-space/

P.S Had to look at the solution. Very interesting solution is presented.

Algorithm:
Pick a value greater than all values in the array, i.e, max_value = array[n-1]+1, where n is size of array.
The main idea is that "%" operator with max_value will give original element and "/" with max_value will give
the new element.

Use the two index pointers, min_index to point to index=0 and max_index to point to index=n-1
For even index, insert using max_index. For odd index, insert using min_index.
to insert max element of array
arr[i] += (array[max_index] % max_value) * max_value;
max_index--;
to inser min element of array
arra[i] += (array[min_index] % max_value) * max_value;
min_index++;

for index 0 to n-1
array[index] /= max_value; 


*/

 
class Solution {
    
    public void max_min(int array[]) {
        
        int min_index = 0, max_index = array.length-1, max_value = array[max_index]+1;
        int i;
        for(i=0;i<array.length;i++) {
            if(i%2 == 0) {
                array[i] += (array[max_index]%max_value)*max_value;
                max_index--;
            }
            else {
                array[i] += (array[min_index]%max_value)*max_value;
                min_index++;
            }
        }
        for(i=0;i<array.length;i++)
            array[i] /= max_value;
            
        System.out.println(Arrays.toString(array));
    }

   
            
    
  
    public static void main (String[] args)
    {
        int array[] = new int[] {1,2,3,4,5};
        Solution s = new Solution();
        s.max_min(array);
        
        
    }
    
}
    
