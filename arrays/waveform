package solution;

import java.util.Arrays;
import java.io.*;
import java.util.*;

/**
 * @author Shreesha
 */

/*QUESTION: Given an unsorted array of integers, sort the array into a wave like array. 
An array ‘arr[0..n-1]’ is sorted in wave form if arr[0] >= arr[1] <= arr[2] >= arr[3] <= arr[4] >= 

link: http://www.geeksforgeeks.org/sort-array-wave-form-2/

Algorithm: Elemenst at even indexes are greater than elements at odd indexes.
2)For every element at even index, if element before or after it is greater, swap the two elements.
Repeat step 2) for every element at even index till you reach end of array.
*/

 
class Solution {
 
    public void swap(int array[], int i, int j) {
        int temp = array[i];
        array[i] = array[j];
        array[j] = temp;
    }
    public void wave_form(int array[]) {
        int i = 0;
        while(i<array.length) {
            if(i>0 && array[i-1]>array[i])
                swap(array, i-1, i);
            else if(i<array.length-1 && array[i+1]>array[i])
                swap(array, i+1, i);
            i+=2;
        }
        
        
            
    }
  
    public static void main (String[] args)
    {
        int[] array = new int[] {10, 5, 6, 3, 2, 20, 100, 80};
        Solution s = new Solution();
        s.wave_form(array);
        System.out.println(Arrays.toString(array));
    }
}
